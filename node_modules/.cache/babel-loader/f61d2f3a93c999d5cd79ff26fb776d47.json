{"remainingRequest":"E:\\csq\\supermalls\\node_modules\\babel-loader\\lib\\index.js!E:\\csq\\supermalls\\src\\network\\request.js","dependencies":[{"path":"E:\\csq\\supermalls\\src\\network\\request.js","mtime":1592980429398},{"path":"E:\\csq\\supermalls\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\csq\\supermalls\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nexport function request(config) {\n  /* return new Promise((resolve,reject) => { */\n  //1.创建axios实列\n  var instance = axios.create({\n    baseURL: 'http://123.207.32.32:8000',\n    timeout: 5000\n  }); //2.axios拦截器\n  //2.1请求拦截\n\n  instance.interceptors.request.use(function (config) {\n    /* console.log(config); */\n    //1,比如config中的一些信息不符合服务器的要求\n    //2，比如每次发送网络请求时，都希望在界面中显示一个请求的图标\n    //3，某些网络请求（比如登录（token）没有携带标识token提醒它让他去登录）\n    return config;\n  }, function (err) {\n    console.log(err);\n  }); //2.2响应拦截\n\n  instance.interceptors.response.use(function (res) {\n    return res.data;\n    console.log(res);\n  }, function (err) {\n    console.log(err);\n  }); //3.发送真正的网络请求\n\n  return instance(config);\n}",{"version":3,"sources":["E:\\csq\\supermalls\\src\\network\\request.js"],"names":["axios","request","config","instance","create","baseURL","timeout","interceptors","use","err","console","log","response","res","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAwB;AAC7B;AACA;AACE,MAAMC,QAAQ,GAACH,KAAK,CAACI,MAAN,CAAa;AAC3BC,IAAAA,OAAO,EAAC,2BADmB;AAE3BC,IAAAA,OAAO,EAAC;AAFmB,GAAb,CAAf,CAH2B,CAO7B;AACA;;AACAH,EAAAA,QAAQ,CAACI,YAAT,CAAsBN,OAAtB,CAA8BO,GAA9B,CACA,UAAAN,MAAM,EAAI;AACT;AAEA;AAEA;AAEA;AACA,WAAOA,MAAP;AACA,GAVD,EAWA,UAAAO,GAAG,EAAI;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,GAbD,EAT6B,CAwB7B;;AACDN,EAAAA,QAAQ,CAACI,YAAT,CAAsBK,QAAtB,CAA+BJ,GAA/B,CACA,UAAAK,GAAG,EAAG;AACL,WAAOA,GAAG,CAACC,IAAX;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,GAJD,EAKA,UAAAJ,GAAG,EAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,GAPD,EAzB8B,CAmC9B;;AACC,SAAQN,QAAQ,CAACD,MAAD,CAAhB;AAED","sourcesContent":["import axios from 'axios'\r\n\r\nexport function request(config){\r\n\t /* return new Promise((resolve,reject) => { */\r\n\t //1.创建axios实列\r\n\t\t  const instance=axios.create({\r\n\t\t  \tbaseURL:'http://123.207.32.32:8000',\r\n\t\t  \ttimeout:5000\r\n\t\t  })\r\n\t\t//2.axios拦截器\r\n\t\t//2.1请求拦截\r\n\t\tinstance.interceptors.request.use(\r\n\t\tconfig => {\r\n\t\t\t/* console.log(config); */\r\n\t\t\t\r\n\t\t\t//1,比如config中的一些信息不符合服务器的要求\r\n\t\t\t\r\n\t\t\t//2，比如每次发送网络请求时，都希望在界面中显示一个请求的图标\r\n\t\t\t\r\n\t\t\t//3，某些网络请求（比如登录（token）没有携带标识token提醒它让他去登录）\r\n\t\t\treturn config;\r\n\t\t},\r\n\t\terr => {\r\n\t\t\tconsole.log(err);\r\n\t\t})\r\n\r\n  //2.2响应拦截\r\n\tinstance.interceptors.response.use(\r\n\tres =>{\r\n\t\treturn res.data;\r\n\t\tconsole.log(res);\r\n\t},\r\n\terr =>{\r\n\t\tconsole.log(err);\r\n\t}\r\n\t)\r\n\t\t  \r\n\t//3.发送真正的网络请求\r\n\t\treturn  instance(config)\r\n\r\n}"]}]}